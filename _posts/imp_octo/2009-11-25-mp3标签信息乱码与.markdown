---
layout: post
title: Mp3标签信息乱码与
categories:
- Journal
tags: []
published: false
comments: true
---
<p>经常与Mp3打交道的话，你可能会发现：
<ol>
	<li>Mp3经常乱码；</li>
	<li>这个软件里面的标签信息正常，但是那个软件里面不正常，又或者明明X软件里面正常，在Windows资源管理器里面不正常；</li>
</ol>
本文的目的就在于通过理论+实践的方式来探究Mp3标签和常见音频播放软件的兼容性问题，并且给出一些可能的、一劳永逸的解决方案。</p>

<p><strong>一、搞清楚Mp3的标签到底是什么</strong></p>

<p>歌曲的分类和管理往往是复杂的，一首歌可以按专辑分类，可以按作者分类，也可以按音轨号分类，按流派分类……而通过用文件名来描述Mp3这些属性的方式太单一，通过目录的方式来分类太死板，缺乏灵活性。所以一个往Mp3文件里面插入一些标签的做法就诞生了。</p>

<p>这本来是一件好事，应该说Mp3标签的诞生使我们管理自己的歌曲库的方式变得简单而又轻松了；然而事实并不是如此。Mp3标签存在多种标准，标准间互不兼容、而每种标签又有不同的优点和缺点，这给本来美好的Mp3管理带来了更多的麻烦。现存的主流标准有：
<ol>
	<li><strong>ID3v1</strong>。标签容量小，稍微长点的歌名或者专辑名都保存不下，而且只支持ASCII码（严格来说是ISO-8859编码）。然而各种播放器对它的支持程度是最好的。</li>
	<li><strong>ID3v2 2.3</strong>。解决了标签容量小导致字符显示不完整的问题，可以任意添加值和属性，甚至可以存储专辑封面和歌词等，而支持的编码“最好”可以到UTF-16，但是你用落后的ISO-8859-1也是可以的。大多数播放器支持。</li>
	<li><strong>ID3 v2.4</strong>。在ID3v2 2.3的基础上改进了不少，我们关心的是其编码集终于支持到了UTF-8，凡是并没有强迫你使用UTF-8，和ID3v2 2.3一样，这就带来了臭名昭著的乱码问题……某些重要的播放器对这种标准的兼容性不好。</li>
	<li><strong>APEv2</strong>。最理想的标签标准。原因是它继承了ID3的各种优势，而且统一使用UTF-8编码，遗憾的是有许多播放器并不支持这种标准。</li>
</ol>
二、各种平台、各软件对Mp3标签标准的支持程度</p>

<p>这个其实是非常耗费时间的一件事。实践出真知，所以我花了不少时间来测试各种平台对Mp3标签的支持程度。此外，还要搞清楚优先读取哪种标签，优先写入哪种标签。利用千千静听+Foobar2000+WMP等软件能轻易写入各种类型的标签、以及进行各种测试。以下这张图代表了大概的测试结果：</p>

<p>三、乱码问题的原因</p>

<p>和计算机上的文本文档等一样，Mp3的标签信息也需要一个编码的过程，才能将人类的语言文字转换成为计算机运算与存储的二进制“0”和“1”。这些转换的方法就是所谓的“编码方式”。例如最原始的ISO8859-1就支持英文字符和一些常见标点与“0”和“1”的转化，我国的“GBK”支持汉字，日语韩语和英文数字及标点，等等：他们转化的关系可以用这张图来表示：</p>

<p>编码之所以会造成乱码的原因，就是因为现在的编码方式太多了，每首歌的标签编码的规则都不同，说白了就是文字到“0”和“1”的对应法则不同。而这些标签写好了以后，放在那里也只是一坨“0”和“1”而已，除非有正确的对应法则来把它解读回我们能认识的字。比如一个以BGK编码写好的标签，放在那里，让一个只懂的ASCII码的播放器来读取，自然是一片乱码了，就好象90后用火星文给我们写了一封信，我们非要按“汉字”来读取，自然是看不懂了。</p>

<p>如上所说，ID3v2无论是2.3还是2.4，支持的编码规则太多了，理解起来自然费劲，尤其是用GBK写的标签，很多Linux系统上因为只支持UTF编码而无法正常显示。这主要是这些压MP3的家伙们不敬业，没有好好研究这些转换软件的编码就乱整一气导致的。不过现在的软件做得都比较好，很多软件默认就写入UTF-16的标签</p>
